{"ast":null,"code":"var _jsxFileName = \"/Users/devchaudhary/Downloads/FullStackOpen-2022-main/part2/phonebook/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Content from './components/Content';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport PersonForm from './components/PersonForm';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [allPersons, setAllPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setAllPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const person = allPersons.filter(person => person.name === newName);\n    const personToAdd = person[0];\n    const updatedPerson = { ...personToAdd,\n      number: newNumber\n    };\n\n    if (person.length !== 0) {\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\n        personService.update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n          console.log(`${returnedPerson.name} successfully updated`);\n          setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${updatedPerson.name} was successfully updated`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }).catch(error => {\n          console.log(error);\n          setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`[ERROR] ${updatedPerson.name} was already deleted from server`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      const personToAdd = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personToAdd).then(returnedPerson => {\n        setAllPersons(allPersons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        setMessage(`${newName} was successfully added`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }).catch(error => {\n        setMessage(`[ERROR] ${error.response.data.error}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        console.log(error.response.data);\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    const filteredPerson = allPersons.filter(person => person.id === id);\n    const personName = filteredPerson[0].name;\n    const personId = filteredPerson[0].id;\n\n    if (window.confirm(`Delete ${personName} ?`)) {\n      personService.remove(personId);\n      console.log(`${personName} successfully deleted`);\n      setMessage(`${personName} was successfully deleted`);\n      setAllPersons(allPersons.filter(person => person.id !== personId));\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    const regex = new RegExp(newFilter, 'i');\n\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex));\n\n    setPersons(filteredPersons);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Filter, {\n    value: newFilter,\n    onChange: handleFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"Add new person\"), /*#__PURE__*/React.createElement(PersonForm, {\n    onSubmit: addPerson,\n    newName: newName,\n    handleNameChange: handleNameChange,\n    newNumber: newNumber,\n    handleNumberChange: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(Content, {\n    persons: persons,\n    allPersons: allPersons,\n    deletePerson: deletePerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/devchaudhary/Downloads/FullStackOpen-2022-main/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Content","Filter","Notification","PersonForm","personService","App","persons","setPersons","allPersons","setAllPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","message","setMessage","getAll","then","initialPersons","addPerson","event","preventDefault","person","filter","name","personToAdd","updatedPerson","number","length","window","confirm","update","id","returnedPerson","console","log","map","personItem","setTimeout","catch","error","create","concat","response","data","deletePerson","filteredPerson","personName","personId","remove","handleNameChange","target","value","handleNumberChange","handleFilterChange","regex","RegExp","filteredPersons","match"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Content from './components/Content'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ allPersons, setAllPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [newFilter, setNewFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n      setAllPersons(initialPersons)\r\n    })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const person = allPersons.filter((person) =>\r\n        person.name === newName\r\n    )\r\n\r\n    const personToAdd = person[0]\r\n    const updatedPerson = { ...personToAdd, number: newNumber }\r\n\r\n    if (person.length !== 0) {\r\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\r\n        personService\r\n          .update(updatedPerson.id, updatedPerson).then(returnedPerson => {\r\n            console.log(`${returnedPerson.name} successfully updated`)\r\n            setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMessage(\r\n              `${updatedPerson.name} was successfully updated`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n            setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMessage(\r\n              `[ERROR] ${updatedPerson.name} was already deleted from server`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n          })\r\n      }\r\n    } else {\r\n        const personToAdd = {\r\n            name: newName,\r\n            number: newNumber\r\n          }\r\n          personService\r\n            .create(personToAdd)\r\n            .then(returnedPerson => {\r\n              setAllPersons(allPersons.concat(returnedPerson))\r\n              setNewName('')\r\n              setNewNumber('')\r\n              setMessage(\r\n                `${newName} was successfully added`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n            })\r\n            .catch(error => {\r\n              setMessage(\r\n                `[ERROR] ${error.response.data.error}`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n              console.log(error.response.data)\r\n            })\r\n    }\r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    const filteredPerson = allPersons.filter(person => person.id === id)\r\n    const personName = filteredPerson[0].name\r\n    const personId = filteredPerson[0].id\r\n    if (window.confirm(`Delete ${personName} ?`)) {\r\n      personService\r\n        .remove(personId)\r\n      console.log(`${personName} successfully deleted`)\r\n      setMessage(\r\n        `${personName} was successfully deleted`\r\n      )\r\n      setAllPersons(allPersons.filter(person => person.id !== personId))\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n    const regex = new RegExp( newFilter, 'i' );\r\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex))\r\n    setPersons(filteredPersons)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <Filter value={newFilter} onChange={handleFilterChange} />\r\n      <h2>Add new person</h2>\r\n      <PersonForm onSubmit={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <Content persons={persons} allPersons={allPersons} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}