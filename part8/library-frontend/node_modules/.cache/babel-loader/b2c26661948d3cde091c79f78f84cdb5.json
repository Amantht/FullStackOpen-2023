{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const ALL_AUTHORS = gql`\nquery {\n  allAuthors {\n    name\n    born\n    bookCount\n  }\n}\n`;\nexport const ALL_BOOKS = gql`\nquery {\n  allBooks {\n    title\n    published\n    genres\n    author {\n      name\n    }\n  }\n}\n`;\nexport const ME = gql`\n  query {\n    me {\n      username\n      favoriteGenre\n    }\n  }\n`;\nexport const ALL_BOOKS_WITH_GENRE = gql`\nquery getallBooks($genre: String!) {\n  allBooks(genre: $genre) {\n    title\n    published\n    genres\n    author {\n      name\n    }\n  }\n}\n`;\nexport const CREATE_BOOK = gql`\nmutation createBook($title: String!, $author: String!, $published: Int!, $genres: [String!]!){\n  addBook(\n    title: $title,\n    author: $author,\n    published: $published,\n    genres: $genres\n  ) {\n    title,\n    author\n  }\n}\n`;\nexport const EDIT_BORN_YEAR = gql`\nmutation changeBornYear($name: String!, $setBornTo: Int!){\n  editAuthor(\n    name: $name, \n    setBornTo: $setBornTo\n    ) {\n      name\n      born\n  }\n}\n`;\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/devchaudhary/Downloads/FullStackOpen-2022-main/part8/library-frontend/src/queries.js"],"names":["gql","ALL_AUTHORS","ALL_BOOKS","ME","ALL_BOOKS_WITH_GENRE","CREATE_BOOK","EDIT_BORN_YEAR","LOGIN"],"mappings":"AAAA,SAASA,GAAT,QAAqB,gBAArB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;CAAxB;AAUP,OAAO,MAAME,SAAS,GAAGF,GAAI;;;;;;;;;;;CAAtB;AAaP,OAAO,MAAMG,EAAE,GAAGH,GAAI;;;;;;;CAAf;AASP,OAAO,MAAMI,oBAAoB,GAAGJ,GAAI;;;;;;;;;;;CAAjC;AAaP,OAAO,MAAMK,WAAW,GAAGL,GAAI;;;;;;;;;;;;CAAxB;AAcP,OAAO,MAAMM,cAAc,GAAGN,GAAI;;;;;;;;;;CAA3B;AAYP,OAAO,MAAMO,KAAK,GAAGP,GAAI;;;;;;CAAlB","sourcesContent":["import { gql  } from '@apollo/client'\n\nexport const ALL_AUTHORS = gql`\nquery {\n  allAuthors {\n    name\n    born\n    bookCount\n  }\n}\n`\n\nexport const ALL_BOOKS = gql`\nquery {\n  allBooks {\n    title\n    published\n    genres\n    author {\n      name\n    }\n  }\n}\n`\n\nexport const ME = gql`\n  query {\n    me {\n      username\n      favoriteGenre\n    }\n  }\n`\n\nexport const ALL_BOOKS_WITH_GENRE = gql`\nquery getallBooks($genre: String!) {\n  allBooks(genre: $genre) {\n    title\n    published\n    genres\n    author {\n      name\n    }\n  }\n}\n`\n\nexport const CREATE_BOOK = gql`\nmutation createBook($title: String!, $author: String!, $published: Int!, $genres: [String!]!){\n  addBook(\n    title: $title,\n    author: $author,\n    published: $published,\n    genres: $genres\n  ) {\n    title,\n    author\n  }\n}\n`\n\nexport const EDIT_BORN_YEAR = gql`\nmutation changeBornYear($name: String!, $setBornTo: Int!){\n  editAuthor(\n    name: $name, \n    setBornTo: $setBornTo\n    ) {\n      name\n      born\n  }\n}\n`\n\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password)  {\n      value\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}