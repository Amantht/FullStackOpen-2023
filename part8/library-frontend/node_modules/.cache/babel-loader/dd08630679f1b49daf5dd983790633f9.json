{"ast":null,"code":"var _jsxFileName = \"/Users/devchaudhary/Downloads/FullStackOpen-2022-main/part8/library-frontend/src/components/Books.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ALL_BOOKS } from '../queries';\n\nconst Books = props => {\n  const result = useQuery(ALL_BOOKS);\n  const [books, setBooks] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  useEffect(() => {\n    if (result.data) {\n      const allBooks = result.data.allBooks;\n      setBooks(allBooks);\n      let genres = ['All genres'];\n      allBooks.forEach(element => {\n        element.genres.forEach(g => {\n          if (genres.indexOf(g) === -1) {\n            genres.push(g);\n          }\n        });\n      });\n      setGenres(genres);\n      setSelectedGenre('All genres');\n    }\n  }, [result]);\n  useEffect(() => {\n    if (selectedGenre === 'All genres') {\n      setFilteredBooks(books);\n    } else {\n      setFilteredBooks(books.filter(b => b.genres.indexOf(selectedGenre) !== -1));\n    }\n  }, [books, selectedGenre]);\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (result.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"in genre \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, selectedGenre)), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"published\")), filteredBooks.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, a.published))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, genres.length > 0 && genres.map(g => React.createElement(\"button\", {\n    onClick: () => setSelectedGenre(g),\n    key: g,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, g))));\n};\n\nexport default Books;","map":{"version":3,"sources":["/Users/devchaudhary/Downloads/FullStackOpen-2022-main/part8/library-frontend/src/components/Books.js"],"names":["React","useState","useEffect","useQuery","ALL_BOOKS","Books","props","result","books","setBooks","filteredBooks","setFilteredBooks","genres","setGenres","selectedGenre","setSelectedGenre","data","allBooks","forEach","element","g","indexOf","push","filter","b","show","loading","map","a","title","author","name","published","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useQuery  } from '@apollo/client'\nimport { ALL_BOOKS } from '../queries'\n\nconst Books = (props) => {\n  const result = useQuery(ALL_BOOKS)\n  const [books, setBooks] = useState([])\n  const [filteredBooks, setFilteredBooks] = useState([])\n  const [genres, setGenres] = useState([])\n  const [selectedGenre, setSelectedGenre] = useState('')\n\n  useEffect(() => {\n    if (result.data) {\n      const allBooks = result.data.allBooks\n      setBooks(allBooks)\n      let genres = ['All genres']\n      allBooks.forEach((element) => {\n        element.genres.forEach((g) => {\n          if (genres.indexOf(g) === -1) {\n            genres.push(g)\n          }\n        })\n      })\n      setGenres(genres)\n      setSelectedGenre('All genres')\n    }\n  }, [result])\n\n  useEffect(() => {\n    if (selectedGenre === 'All genres') {\n      setFilteredBooks(books)\n    } else {\n      setFilteredBooks(\n        books.filter((b) => b.genres.indexOf(selectedGenre) !== -1)\n      )\n    }\n  }, [books, selectedGenre])\n\n  if (!props.show) {\n    return null\n  }\n\n  if (result.loading)  {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div>\n      <h2>books</h2>\n      <p>\n        in genre <b>{selectedGenre}</b>\n      </p>\n      \n      <table>\n        <tbody>\n          <tr>\n            <th></th>\n            <th>\n              author\n            </th>\n            <th>\n              published\n            </th>\n          </tr>\n          {filteredBooks.map(a =>\n            <tr key={a.title}>\n              <td>{a.title}</td>\n              <td>{a.author.name}</td>\n              <td>{a.published}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <div>\n        {genres.length > 0 &&\n          genres.map((g) => (\n            <button onClick={() => setSelectedGenre(g)} key={g}>\n              {g}\n            </button>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Books"]},"metadata":{},"sourceType":"module"}